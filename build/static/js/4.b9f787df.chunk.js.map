{"version":3,"sources":["app/EgretLayout/SharedCompoents/ShoppingCart.jsx","app/EgretLayout/SharedCompoents/NotificationBar.jsx","app/EgretLayout/SharedCompoents/LanguageSelect.jsx","app/EgretLayout/SharedCompoents/Sidenav.jsx","app/navigations.js","app/EgretLayout/SharedCompoents/Brand.jsx","app/EgretLayout/EgretTheme/SidenavTheme.jsx","app/EgretLayout/SharedCompoents/Footer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/BadgeSelected.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/customizerOptions.js","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout1Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout2Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx","app/EgretLayout/SharedCompoents/SecondarySidebar.jsx"],"names":["cartListLoaded","withStyles","withTheme","connect","state","settings","layout","getCartList","PropTypes","func","isRequired","deleteProductFromCart","updateCartAmount","cartList","ecommerce","user","props","container","theme","_props$cartList","_React$useState","React","useState","_React$useState2","Object","D_FRONT_END_InternOceantech_L3_luyenkieuPreprojectDeploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","panelOpen","setPanelOpen","userId","palette","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","themes","activeTheme","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","variant","anchor","open","onClose","ModalProps","keepMounted","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","color","map","product","key","id","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","size","onClick","amount","disabled","src","imgUrl","alt","title","price","fontSize","getNotification","deleteNotification","deleteAllNotification","notification","LanguageSelect","selected","hasError","value","_this$props","this","i18n","t","classes","changeLanguage","setState","_this2","_this$props2","_this$state","react__WEBPACK_IMPORTED_MODULE_4___default","root","autoComplete","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_10__","formControl","error","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_7__","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_11__","name","onChange","event","handleChange","target","input","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_9__","Component","display","flexWrap","margin","spacing","unit","minWidth","selectEmpty","marginTop","ViewEgretVerticalNav","withTranslation","EgretVerticalNav","Sidenav","updateSidebarMode","sidebarSettings","_this","setLayoutSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","D_FRONT_END_InternOceantech_L3_luyenkieuPreprojectDeploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","[object Object]","leftSidebar","renderOverlay","react__WEBPACK_IMPORTED_MODULE_5___default","mode","navigation","localStorageService","getLocalStorageItem","length","navigations","react__WEBPACK_IMPORTED_MODULE_5__","react_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_6___default","option","suppressScrollX","children","getNavigation","withRouter","__webpack_require__","d","__webpack_exports__","_appConfig__WEBPACK_IMPORTED_MODULE_0__","_appConfig__WEBPACK_IMPORTED_MODULE_0___default","n","icon","path","ConstantList","ROOT_PATH","isVisible","Brand","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","HOME_PAGE","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_helmet__WEBPACK_IMPORTED_MODULE_1__","SidenavTheme","_ref","concat","type","text","secondary","layout1Settings","bgImgURL","primary","main","bgOpacity","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_5__","footerTheme","footer","contrastText","href","BadgeSelected","badge","top","right","height","width","borderRadius","Badge","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleControlChange","react_default","react","i","Tooltip","placement","style","backgroundColor","themeColors","Icon","topbar","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","bg","EgretCustomizer_BadgeSelected","badgeContent","invisible","Paper","Slider","marks","step","max","min","valueLabelDisplay","aria-labelledby","FormGroup","Switch","checked","get","Layout2Customizer","keys","layout2Settings","navbar","EgretCustomizer","updateSettings","newSettings","setDefaultSettings","updatedSettings","merge","selectLayout","set","controlValue","tooglePanel","objectSpread2","IconButton","ThemeProvider","background","default","minHeight","lib_default","options","elevation","EgretCustomizer_Layout1Customizer","EgretCustomizer_Layout2Customizer","secondarySidebar","paper","SecondarySidebar","toggle","listenWindowResize","debounce","isMobile","window","listenWindowResizeRef","addEventListener","removeEventListener","secondarySidebarTheme","Helmet","classList","secondary-sidebar","SharedCompoents_EgretCustomizer_EgretCustomizer","ShoppingCart","Fab","position","bottom","flexDirection","alignItems","justifyContent","boxShadow","shadows","zIndex","transition","&.open","& .toggle","left"],"mappings":"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","file":"static/js/4.b9f787df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  MuiThemeProvider,\r\n  IconButton,\r\n  Drawer\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCartList,\r\n  deleteProductFromCart,\r\n  updateCartAmount\r\n} from \"app/redux/actions/EcommerceActions\";\r\n\r\nlet cartListLoaded = false;\r\n\r\nfunction ShoppingCart(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    cartList = [],\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n    user\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  if (!cartListLoaded) {\r\n    getCartList(user.userId);\r\n    cartListLoaded = true;\r\n  }\r\n\r\n  function handleDrawerToggle() {\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      {/* <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"mini-cart\">\r\n          <div className=\"cart__topbar flex flex-middle p-16 mb-24\">\r\n            <Icon color=\"primary\">shopping_cart</Icon>\r\n            <h5 className=\"ml-8 my-0 font-weight-500\">Cart</h5>\r\n          </div>\r\n\r\n          {cartList.map(product => (\r\n            <div\r\n              key={product.id}\r\n              className=\"mini-cart__item flex flex-middle flex-space-between py-16 px-8\"\r\n            >\r\n              <div className=\"flex flex-column mr-8\">\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount + 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\r\n                </IconButton>\r\n                <IconButton\r\n                  disabled={!(product.amount - 1)}\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount - 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"mr-8\">\r\n                <img src={product.imgUrl} alt={product.title} />\r\n              </div>\r\n              <div className=\"mr-8 text-center\">\r\n                <h6 className=\"m-0 mb-4\">{product.title}</h6>\r\n                <small className=\"text-muted\">\r\n                  ${product.price} x {product.amount}\r\n                </small>\r\n              </div>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => deleteProductFromCart(user.userId, product.id)}\r\n              >\r\n                <Icon fontSize=\"small\">clear</Icon>\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Drawer>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nShoppingCart.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  cartList: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  getCartList: PropTypes.func.isRequired,\r\n  deleteProductFromCart: PropTypes.func.isRequired,\r\n  updateCartAmount: PropTypes.func.isRequired,\r\n  cartList: state.ecommerce.cartList,\r\n  user: state.user\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { getCartList, deleteProductFromCart, updateCartAmount }\r\n  )(ShoppingCart)\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  MuiThemeProvider,\r\n  Card,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { getTimeDifference } from \"utils.js\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getNotification,\r\n  deleteAllNotification,\r\n  deleteNotification\r\n} from \"../../redux/actions/NotificationActions\";\r\n\r\nfunction NotificationBar(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    notification: notifcationList = [],\r\n    getNotification,\r\n    deleteAllNotification,\r\n    deleteNotification\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    if (!panelOpen) {\r\n      getNotification();\r\n    }\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n  const parentThemePalette = theme.palette;\r\n  // console.log(theme);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      {/* <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={5}>\r\n          <Icon>notifications</Icon>\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      {/* <Drawer\r\n        width={\"100px\"}\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"notification\">\r\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\r\n            <Icon color=\"primary\">notifications</Icon>\r\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notifications</h5>\r\n          </div>\r\n\r\n          {notifcationList.map(notification => (\r\n            <div\r\n              key={notification.id}\r\n              className=\"notification__card position-relative\"\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                className=\"delete-button bg-light-gray mr-24\"\r\n                onClick={() => deleteNotification(notification.id)}\r\n              >\r\n                <Icon className=\"text-muted\" fontSize=\"small\">\r\n                  clear\r\n                </Icon>\r\n              </IconButton>\r\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\r\n                <Card className=\"mx-16 mb-24\" elevation={3}>\r\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\r\n                    <div className=\"flex\">\r\n                      <div className=\"card__topbar__button\">\r\n                        <Icon\r\n                          className=\"card__topbar__icon\"\r\n                          fontSize=\"small\"\r\n                          color={notification.icon.color}\r\n                        >\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                      </div>\r\n                      <span className=\"ml-4 font-weight-500 text-muted\">\r\n                        {notification.heading}\r\n                      </span>\r\n                    </div>\r\n                    <small className=\"card__topbar__time text-muted\">\r\n                      {getTimeDifference(new Date(notification.timestamp))} ago\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"px-16 pt-8 pb-16\">\r\n                    <p className=\"m-0\">{notification.title}</p>\r\n                    <small className=\"text-muted\">\r\n                      {notification.subtitle}\r\n                    </small>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"text-center\">\r\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\r\n          </div>\r\n        </div>\r\n      </Drawer> */}\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nNotificationBar.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  notification: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  getNotification: PropTypes.func.isRequired,\r\n  deleteNotification: PropTypes.func.isRequired,\r\n  deleteAllNotification: PropTypes.func.isRequired,\r\n  notification: state.notification,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { getNotification, deleteNotification, deleteAllNotification }\r\n  )(NotificationBar)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass LanguageSelect extends React.Component {\r\n\r\n\r\n  state = {\r\n    selected: 'vi',\r\n    hasError: false\r\n  };\r\n\r\n  handleChange(value) {\r\n    //alert(t('description.part1'));\r\n    const { t, i18n,classes } = this.props;\r\n    i18n.changeLanguage(value);\r\n    this.setState({ selected: value });\r\n  }\r\n  render() {\r\n    const { t, i18n,classes } = this.props;\r\n    const { selected, hasError } = this.state;\r\n    let language= 'vi';\r\n    const changeLanguage = lng => {\r\n      i18n.changeLanguage(lng);\r\n    };  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl className={classes.formControl} error={hasError}>\r\n          <InputLabel htmlFor=\"name\">{t('general.language')}</InputLabel>\r\n          <Select\r\n            name=\"name\"\r\n            value={selected}\r\n            onChange={event => this.handleChange(event.target.value)}\r\n            input={<Input id=\"name\" />}\r\n          >\r\n            <MenuItem value=\"vi\">Tiếng Việt</MenuItem>\r\n            {/* <MenuItem value=\"de\">Deutsch</MenuItem> */}\r\n            {/* <MenuItem value=\"en\">English</MenuItem> */}\r\n          </Select>\r\n          {hasError && <FormHelperText>This is required!</FormHelperText>}\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLanguageSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(LanguageSelect);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { navigations } from \"../../navigations\";\r\nimport { EgretVerticalNav } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport localStorageService from \"../../services/localStorageService\";\r\nconst ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\r\nclass Sidenav extends Component {\r\n  state = {};\r\n  updateSidebarMode = (sidebarSettings) => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  renderOverlay = () => (\r\n    <div\r\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\r\n      className=\"sidenav__overlay\"\r\n    />\r\n  );\r\n  getNavigation() {\r\n    //let navigation=localStorageService.getSessionItem(\"navigations\");\r\n    let navigation = localStorageService.getLocalStorageItem(\"navigations\");\r\n    if (navigation && navigation.length > 0) {\r\n      return navigation;\r\n    } else {\r\n      return navigations;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Scrollbar\r\n          option={{ suppressScrollX: true }}\r\n          className=\"scrollable position-relative\"\r\n        >\r\n          {this.props.children}\r\n          <ViewEgretVerticalNav navigation={this.getNavigation()} />\r\n        </Scrollbar>\r\n        {this.renderOverlay()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings,\r\n});\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings,\r\n  })(Sidenav)\r\n);\r\n","import ConstantList from \"./appConfig\";\r\nexport const navigations = [\r\n  {\r\n    name: \"Dashboard.dashboard\",\r\n    icon: \"dashboard\",\r\n    path: ConstantList.ROOT_PATH + \"home\",\r\n    isVisible: true,\r\n  },\r\n  {\r\n    name: \"Dashboard.category\",\r\n    icon: \"category\",\r\n    path: \"\",\r\n    isVisible: true,\r\n    children: [\r\n      {\r\n        name: \"manage.add_employees\",\r\n        path: ConstantList.ROOT_PATH + \"add-employee\",\r\n        icon: \"keyboard_arrow_right\",\r\n        isVisible: true,\r\n      },\r\n      {\r\n        name: \"manage.employees\",\r\n        path: ConstantList.ROOT_PATH + \"manage-employees\",\r\n        icon: \"keyboard_arrow_right\",\r\n        isVisible: true,\r\n      },\r\n      {\r\n        name: \"manage.end_employees\",\r\n        path: ConstantList.ROOT_PATH + \"end-employee\",\r\n        icon: \"keyboard_arrow_right\",\r\n        isVisible: true,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: \"Dashboard.manage\",\r\n    isVisible: true,\r\n    path: \"\",\r\n    icon: \"engineering\",\r\n    children: [\r\n      {\r\n        name: \"leader.waiting_approval\",\r\n        isVisible: true,\r\n        path: ConstantList.ROOT_PATH + \"waiting-approval\",\r\n        icon: \"keyboard_arrow_right\"\r\n      },\r\n      {\r\n        name: \"leader.leader_approval\",\r\n        isVisible: true,\r\n        path: ConstantList.ROOT_PATH + \"leader-approval\",\r\n        icon: \"keyboard_arrow_right\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet';\r\nclass Brand extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-middle flex-space-between brand-area\">\r\n        {/* <div className=\"flex flex-middle brand\">       \r\n          <Link to={ConstantList.HOME_PAGE}>\r\n             <img src= {ConstantList.ROOT_PATH+ \"assets/images/logo-paster.png\"} alt=\"company-logo\" />         \r\n          </Link>\r\n          <span className=\"brand__text\">PASTEUR EQA</span>\r\n        </div> */}\r\n        <div className=\"flex flex-middle brand logo-menu\">\r\n          <Link to={ConstantList.HOME_PAGE}>\r\n            <span className=\"brand__text\">Fashion Store</span>\r\n          </Link>\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SidenavTheme = ({ theme, settings }) => {\r\n\r\n  function darkHoverStyle() {\r\n    return theme.palette.type === \"dark\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active {\r\n          color: ${theme.palette.text.primary};\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  function lightHoverStyle() {\r\n    return theme.palette.type === \"light\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active,\r\n        .navigation .submenu {\r\n          background: rgba(0, 0, 0, .08);\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <style>\r\n        {`\r\n        \r\n        ${\r\n          theme.palette.type === \"dark\"\r\n            ? `.sidenav {\r\n          color: ${theme.palette.text.secondary};\r\n        }`\r\n            : \" \"\r\n        }\r\n\r\n        .sidenav__hold {\r\n          background-image: url(${\r\n            settings.layout1Settings.leftSidebar.bgImgURL\r\n          });\r\n          opacity: 1 !important;\r\n        }\r\n        .sidenav__hold::after {\r\n          background: ${theme.palette.primary.main};\r\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\r\n        }\r\n\r\n        ${lightHoverStyle()}\r\n        ${darkHoverStyle()}\r\n        \r\n      `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import React from \"react\";\r\nimport { withStyles, MuiThemeProvider, Button } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Footer = ({ theme, settings }) => {\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n  return (\r\n    <MuiThemeProvider theme={footerTheme}>\r\n      <Helmet>\r\n        <style>\r\n          {`\r\n              .footer {\r\n                background: ${footerTheme.palette.primary.main};\r\n                color: ${footerTheme.palette.primary.contrastText};\r\n              }\r\n            `}\r\n        </style>\r\n      </Helmet>\r\n      <div className=\"footer flex flex-middle\">\r\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\r\n          <a href=\"#\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Hotline: 0349655473\r\n            </Button>\r\n          </a>\r\n          <span className=\"m-auto\"></span>\r\n          {/* <p className=\"m-0\">\r\n              Developed by <a href=\"http://globits.net\">Globits</a>\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Footer)\r\n);\r\n","import { Badge, withStyles } from \"@material-ui/core\";\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"100%\",\r\n    right: \"90%\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"colors\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {topbarThemes\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.topbar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.topbar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background image</div>\r\n\r\n        <div className=\"layout-boxes\">\r\n          {sidebarBG.map((bg, i) => (\r\n            <BadgeSelected\r\n              key={i}\r\n              color=\"primary\"\r\n              className=\"layout-box\"\r\n              style={{ width: \"calc(25% - 8px)\" }}\r\n              badgeContent={<Icon>done</Icon>}\r\n              invisible={settings.layout1Settings.leftSidebar.bgImgURL !== bg}\r\n            >\r\n              <Paper\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                }\r\n                style={{ height: \"160px\" }}\r\n              >\r\n                <img src={bg} alt=\"\" />\r\n              </Paper>\r\n            </BadgeSelected>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  FormGroup,\r\n  Tooltip,\r\n  Switch,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { merge, get, set } from \"lodash\";\r\nimport Layout1Customizer from \"./Layout1Customizer\";\r\nimport Layout2Customizer from \"./Layout2Customizer\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport ConstantList from \"../../../appConfig\";\r\nconst styles = theme => ({\r\n  root: {\r\n    \r\n  },\r\n  paper: {\r\n    display: \"inherit\"\r\n  }\r\n});\r\n\r\nclass EgretCustomizer extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  updateSettings = newSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    let updatedSettings = merge({}, settings, newSettings);\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  selectLayout = activeLayout => {\r\n    this.updateSettings({ activeLayout });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    let { settings } = this.props;\r\n    let updatedSettings = set(settings, name, value);\r\n\r\n    this.updateSettings(updatedSettings);\r\n  };\r\n\r\n  handleControlChange = name => event => {\r\n    let controlValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    this.handleChange(name, controlValue);\r\n  };\r\n\r\n  tooglePanel = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes } = this.props;\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n    // console.log(activeTheme);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"delete\"\r\n            className=\"my-12\"\r\n            onClick={this.tooglePanel}\r\n          >\r\n            <Icon className=\"spin\">settings</Icon>\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {this.state.open && (\r\n          <MuiThemeProvider theme={activeTheme}>\r\n            <div\r\n              className={`egret-customizer pb-8 ${classes.root}`}\r\n              style={{\r\n                backgroundColor: activeTheme.palette.background.default\r\n              }}\r\n            >\r\n              <div className=\"flex felx-row flex-middle p-16 mb-16 elevation-z6\" style={{minHeight: \"64px\"}}>\r\n                <Icon color=\"primary\">settings</Icon>\r\n                <h5 className=\"mb-0 ml-8\">Theme Settings</h5>\r\n                <IconButton\r\n                  onClick={this.tooglePanel}\r\n                  className=\"customizer-close\"\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <Scrollbar options={{ suppressScrollX: true }} className=\"px-16\">\r\n                <div className=\"mt-8 mb-32 mx-12\">\r\n                  <div className=\"text-muted\">Layouts</div>\r\n\r\n                  <div className=\"layout-boxes\">\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout1\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout1\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout1-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout2\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout2\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout2-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                  </div>\r\n                </div>\r\n                {/* END LAYOUT */}\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Main theme</div>\r\n                  <div className=\"colors\">\r\n                    {mainThemes.map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.updateSettings({ activeTheme: color })\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.activeTheme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {settings.activeLayout === \"layout1\" && (\r\n                  <Layout1Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                {settings.activeLayout === \"layout2\" && (\r\n                  <Layout2Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Footer</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.footer, \"show\")}\r\n                            onChange={this.handleControlChange(\"footer.show\")}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(\r\n                              settings.layout1Settings.footer,\r\n                              \"fixed\"\r\n                            )}\r\n                            onChange={this.handleControlChange(\"footer.fixed\")}\r\n                          />\r\n                        }\r\n                        label=\"Fixed\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.secondarySidebar, \"show\")}\r\n                            onChange={this.handleControlChange(\r\n                              \"secondarySidebar.show\"\r\n                            )}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"secondarySidebar.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.secondarySidebar.theme === color && (\r\n                            <Icon>done</Icon>\r\n                          )}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Footer theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"footer.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.footer.theme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Scrollbar>\r\n            </div>\r\n          </MuiThemeProvider>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings, setDefaultSettings }\r\n  )(EgretCustomizer)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MuiThemeProvider,\r\n  Badge,\r\n  Fab,\r\n  IconButton,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { classList, isMobile, debounce } from \"utils\";\r\nimport EgretCustomizer from \"./EgretCustomizer/EgretCustomizer\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport ShoppingCart from \"./ShoppingCart\";\r\n\r\nconst width = \"50px\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width,\r\n    right: `-${width}`,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\",\r\n    \"&.open\": {\r\n      right: 0,\r\n      \"& .toggle\": {\r\n        left: 0\r\n      }\r\n    },\r\n    \"& .toggle\": {\r\n      position: \"relative\",\r\n      left: \"-28px\",\r\n      bottom: \"20px\",\r\n      transition: \"all 0.15s ease\"\r\n    }\r\n  }\r\n});\r\n\r\nclass SecondarySidebar extends Component {\r\n  state = {\r\n    open: true\r\n  };\r\n  listenWindowResizeRef;\r\n\r\n  toggle = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({ open: !isMobile() });\r\n    if (window) {\r\n      this.listenWindowResizeRef = this.listenWindowResize();\r\n      // LISTEN WINDOW RESIZE\r\n      window.addEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) {\r\n      window.removeEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  listenWindowResize = () => {\r\n    return debounce(() => {\r\n      this.setState({ open: !isMobile() });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n    const secondarySidebarTheme =\r\n      settings.themes[settings.secondarySidebar.theme] || theme;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={secondarySidebarTheme}>\r\n        {this.state.open && !isMobile() && (\r\n          <Helmet>\r\n            <style>\r\n              {`\r\n              .content-wrap, \r\n              .layout2.layout-contained, \r\n              .layout2.layout-full {\r\n                margin-right: ${width};\r\n              }\r\n              @media screen and (max-width: 959px) {\r\n                .toolbar-menu-wrap .menu-area {\r\n                  width: calc(100% - ${width});\r\n                }\r\n              }\r\n              .egret-customizer {\r\n                right: ${width};\r\n              }\r\n            `}\r\n            </style>\r\n          </Helmet>\r\n        )}\r\n\r\n        <div\r\n          className={\r\n            classes.root +\r\n            \" \" +\r\n            classList({\r\n              open: this.state.open,\r\n              \"secondary-sidebar\": true\r\n            })\r\n          }\r\n          style={{\r\n            backgroundColor: secondarySidebarTheme.palette.primary.main\r\n          }}\r\n        >\r\n          <span className=\"m-auto\"></span>\r\n\r\n          <EgretCustomizer />\r\n\r\n          <ShoppingCart/>\r\n\r\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-12\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n\r\n          {/* Toggle Button */}\r\n          <span className=\"m-auto\"></span>\r\n          <div className=\"toggle\">\r\n            {this.state.open && (\r\n              <IconButton\r\n                onClick={this.toggle}\r\n                size=\"small\"\r\n                aria-label=\"toggle\"\r\n              >\r\n                <Icon>arrow_right</Icon>\r\n              </IconButton>\r\n            )}\r\n            {!this.state.open && (\r\n              <Fab\r\n                variant=\"extended\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className=\"pr-36\"\r\n                onClick={this.toggle}\r\n              >\r\n                <Icon>arrow_left</Icon>\r\n              </Fab>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {}\r\n    )(SecondarySidebar)\r\n  )\r\n);\r\n"],"sourceRoot":""}